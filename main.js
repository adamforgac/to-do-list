(()=>{"use strict";(function(){const e=document.querySelector(".creator-menu");document.querySelector(".project-creator").addEventListener("click",(()=>{e.classList.add("active-menu"),document.querySelector("body").classList.add("menu-active")})),document.querySelector(".leave-creator i").addEventListener("click",(()=>{e.classList.remove("active-menu"),document.querySelector("body").classList.remove("menu-active")}));const t=document.querySelector(".mobile-adder"),a=document.querySelector(".creator-menu-mobile"),n=document.querySelector(".todo-create-mobile"),o=document.querySelector(".project-create-mobile"),c=document.querySelector(".note-create-mobile"),s=document.querySelector(".todo-create-mobile p"),r=document.querySelector(".project-create-mobile p"),d=document.querySelector(".note-create-mobile p");t.addEventListener("click",(()=>{a.classList.toggle("active-menu-mobile"),document.querySelector(".mobile-adder i").classList.toggle("rotated"),n.classList.toggle("active-todo-mobile"),o.classList.toggle("active-project-mobile"),c.classList.toggle("active-note-mobile"),s.classList.toggle("options-appear"),r.classList.toggle("options-appear"),d.classList.toggle("options-appear"),document.querySelector("body").classList.toggle("menu-active")}));const l=document.querySelector(".todo-create"),i=document.querySelector(".note-create"),u=document.querySelector(".project-create"),m=document.querySelector(".todo-setter"),p=document.querySelector(".note-setter"),v=document.querySelector(".project-setter"),y=document.querySelector(".todo-setter-nav-arrow i"),h=document.querySelector(".note-setter-nav-arrow i"),L=document.querySelector(".project-setter-nav-arrow i"),k=document.querySelector(".todo-setter-nav-icons i"),S=document.querySelector(".note-setter-nav-icons i"),q=document.querySelector(".project-setter-nav-icons i");l.addEventListener("click",(()=>{m.classList.add("active-todo-setter")})),i.addEventListener("click",(()=>{p.classList.add("active-note-setter")})),u.addEventListener("click",(()=>{v.classList.add("active-project-setter")})),y.addEventListener("click",(()=>{m.classList.remove("active-todo-setter"),e.classList.add("active-menu")})),h.addEventListener("click",(()=>{p.classList.remove("active-note-setter"),e.classList.add("active-menu")})),L.addEventListener("click",(()=>{v.classList.remove("active-project-setter"),e.classList.add("active-menu")})),k.addEventListener("click",(()=>{m.classList.remove("active-todo-setter"),e.classList.remove("active-menu")})),S.addEventListener("click",(()=>{p.classList.remove("active-note-setter"),e.classList.remove("active-menu")})),q.addEventListener("click",(()=>{v.classList.remove("active-project-setter"),e.classList.remove("active-menu")}));const C=document.querySelector(".todo-create-mobile"),E=document.querySelector(".note-create-mobile"),g=document.querySelector(".project-create-mobile");C.addEventListener("click",(()=>{m.classList.add("active-todo-setter")})),E.addEventListener("click",(()=>{p.classList.add("active-note-setter")})),g.addEventListener("click",(()=>{v.classList.add("active-project-setter")})),k.addEventListener("click",(()=>{m.classList.remove("active-todo-setter"),a.classList.remove("active-menu-mobile"),document.querySelector(".mobile-adder i").classList.remove("rotated"),n.classList.remove("active-todo-mobile"),o.classList.remove("active-project-mobile"),c.classList.remove("active-note-mobile"),s.classList.remove("options-appear"),r.classList.remove("options-appear"),d.classList.remove("options-appear"),document.querySelector("body").classList.remove("menu-active")})),S.addEventListener("click",(()=>{p.classList.remove("active-note-setter"),a.classList.remove("active-menu-mobile"),document.querySelector(".mobile-adder i").classList.remove("rotated"),n.classList.remove("active-todo-mobile"),o.classList.remove("active-project-mobile"),c.classList.remove("active-note-mobile"),s.classList.remove("options-appear"),r.classList.remove("options-appear"),d.classList.remove("options-appear"),document.querySelector("body").classList.remove("menu-active")})),q.addEventListener("click",(()=>{v.classList.remove("active-project-setter"),a.classList.remove("active-menu-mobile"),document.querySelector(".mobile-adder i").classList.remove("rotated"),n.classList.remove("active-todo-mobile"),o.classList.remove("active-project-mobile"),c.classList.remove("active-note-mobile"),s.classList.remove("options-appear"),r.classList.remove("options-appear"),d.classList.remove("options-appear"),document.querySelector("body").classList.remove("menu-active")}))})(),function(){const e=document.querySelector(".mobile-menu"),t=document.querySelector(".nav"),a=document.querySelector(".task-board"),n=document.querySelector("body");e.addEventListener("click",(()=>{t.style.pointerEvents="all",t.style.left="0",t.style.width="80%",t.style.opacity="1",a.style.pointerEvents="none",a.style.filter="brightness(0.3)",n.style.overflow="hidden",t.classList.add("active-nav")})),document.addEventListener("click",(e=>{const o=[];let c=e.target;for(;null!==c;){const e=Array.from(c.classList);o.push(...e),c=c.parentElement}o.includes("nav")||o.includes("mobile-menu")||!t.classList.contains("active-nav")||(t.style.pointerEvents="none",t.style.left="-300px",t.style.width="10%",t.style.opacity="1",a.style.pointerEvents="all",a.style.filter="none",n.style.overflow="visible",t.classList.remove("active-nav"))}))}(),window.onload=function(){const e=document.querySelector(".board-date p"),t=new Date,a=`${["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][t.getDay()]}, ${t.getDate()} ${["January","February","March","April","May","June","July","August","September","October","November","December"][t.getMonth()]}`;e.textContent=a};const e=[],t=[],a=[],n=[],o=[];let c=[];const s=[];let r=[],d=[],l=[],i=[];const u=document.querySelector(".todos"),m=document.querySelector(".projects"),p=document.querySelector(".todo-setter-accept button"),v=document.querySelector(".note-setter-accept-button"),y=document.querySelector(".project-setter-accept-button"),h=document.querySelector(".all-count p"),L=document.querySelector(".important-count p"),k=document.querySelector(".notes-count p"),S=document.querySelector(".completed-count p"),q=document.querySelector("#projects_input"),C=document.querySelector(".category-name h2"),E=document.querySelector(".important"),g=document.querySelector(".all"),f=document.querySelector(".completed"),x=document.querySelector(".notes");function b(e,t,a,n,o){this.title=e,this.details=t,this.project=a,this.date=n,this.importance=o}function A(e,t){this.title=e,this.details=t}function j(e,t){this.title=e,this.color=t}function T(){const e=u.querySelectorAll(".not-important");for(let t=0;t<=e.length-1;t++)e[t].setAttribute("data-card",[t]),e[t].querySelectorAll(".task-status, .not-important-round, .fa-star").forEach((e=>{e.setAttribute("data-card",[t])}))}function w(){const e=u.querySelectorAll(".note");for(let t=0;t<=e.length-1;t++)e[t].setAttribute("data-card",[t])}function N(){const e=m.querySelectorAll(".project-list");for(let t=0;t<=e.length-1;t++)e[t].setAttribute("data-card",[t])}function M(){const e=u.querySelectorAll(".important-task");for(let t=0;t<=e.length-1;t++)e[t].setAttribute("data-card",[t]),e[t].querySelectorAll(".task-status, .round, .fa-star").forEach((e=>{e.setAttribute("data-card",[t])}))}function I(){const e=u.querySelectorAll(".completed-task");for(let t=0;t<=e.length-1;t++)e[t].setAttribute("data-card",[t]),e[t].querySelectorAll(".task-status, .round, .fa-star").forEach((e=>{e.setAttribute("data-card",[t])}))}function F(){const o=e.length+a.length+t.length;h.textContent=o;const c=t.length;L.textContent=c;const s=a.length;k.textContent=s;const r=n.length;S.textContent=r}function D(){for(let e=0;e<t.length;e++){u.appendChild(document.createElement("div")).classList.add("task","item","important-task");const a=u.querySelectorAll(".important-task");a[e].appendChild(document.createElement("div")).classList.add("task-status"),a[e].appendChild(document.createElement("div")).classList.add("task-text"),a[e].appendChild(document.createElement("div")).classList.add("task-importance"),a[e].querySelector(".task-status").appendChild(document.createElement("div")).classList.add("round","important-round");const n=a[e].querySelector(".task-text");n.appendChild(document.createElement("div")).classList.add("task-heading"),n.appendChild(document.createElement("div")).classList.add("task-category"),a[e].querySelector(".task-heading").appendChild(document.createElement("h2")).textContent=t[e].title,n.querySelector(".task-category").appendChild(document.createElement("p")).textContent="Tasks",a[e].querySelector(".task-importance").appendChild(document.createElement("i")).classList.add("fa-solid","fa-star"),M()}}function H(){for(let e=0;e<a.length;e++){u.appendChild(document.createElement("div")).classList.add("note","item");const t=u.querySelectorAll(".note");t[e].appendChild(document.createElement("div")).classList.add("note-status"),t[e].appendChild(document.createElement("div")).classList.add("note-text"),t[e].appendChild(document.createElement("div")).classList.add("note-importance"),t[e].querySelector(".note-status").appendChild(document.createElement("div")).classList.add("note-icon"),t[e].querySelector(".note-icon").appendChild(document.createElement("i")).classList.add("fa-solid","fa-note-sticky");const n=t[e].querySelector(".note-text");n.appendChild(document.createElement("div")).classList.add("note-heading"),n.appendChild(document.createElement("div")).classList.add("note-category"),t[e].querySelector(".note-heading").appendChild(document.createElement("h2")).textContent=a[e].title,n.querySelector(".note-category").appendChild(document.createElement("p")).textContent="Notes",w()}}function V(a){r=[],d=[],l=[],i=[];for(let t=0;t<e.length;t++)if(e[t].project===a){r.push(e[t]);const a=t;d.push(a)}for(let e=0;e<t.length;e++)if(t[e].project===a){i.push(t[e]);const a=e;l.push(a)}!function(){for(let e=0;e<r.length;e++){u.appendChild(document.createElement("div")).classList.add("task","item","not-important");const t=u.querySelectorAll(".not-important");t[e].appendChild(document.createElement("div")).classList.add("task-status"),t[e].appendChild(document.createElement("div")).classList.add("task-text"),t[e].appendChild(document.createElement("div")).classList.add("task-importance"),t[e].querySelector(".task-status").appendChild(document.createElement("div")).classList.add("round","not-important-round");const a=t[e].querySelector(".task-text");a.appendChild(document.createElement("div")).classList.add("task-heading"),a.appendChild(document.createElement("div")).classList.add("task-category"),t[e].querySelector(".task-heading").appendChild(document.createElement("h2")).textContent=r[e].title,a.querySelector(".task-category").appendChild(document.createElement("p")).textContent="Tasks",t[e].querySelector(".task-importance").appendChild(document.createElement("i")).classList.add("fa-solid","fa-star")}const e=u.querySelectorAll(".not-important");for(let t=0;t<e.length;t++)e[t].setAttribute("data-card",d[t]),e[t].querySelectorAll(".task-status, .not-important-round, .fa-star").forEach((e=>{e.setAttribute("data-card",d[t])}))}(),function(){for(let e=0;e<i.length;e++){u.appendChild(document.createElement("div")).classList.add("task","item","important-task");const t=u.querySelectorAll(".important-task");t[e].appendChild(document.createElement("div")).classList.add("task-status"),t[e].appendChild(document.createElement("div")).classList.add("task-text"),t[e].appendChild(document.createElement("div")).classList.add("task-importance"),t[e].querySelector(".task-status").appendChild(document.createElement("div")).classList.add("round","important-round");const a=t[e].querySelector(".task-text");a.appendChild(document.createElement("div")).classList.add("task-heading"),a.appendChild(document.createElement("div")).classList.add("task-category"),t[e].querySelector(".task-heading").appendChild(document.createElement("h2")).textContent=i[e].title,a.querySelector(".task-category").appendChild(document.createElement("p")).textContent="Tasks",t[e].querySelector(".task-importance").appendChild(document.createElement("i")).classList.add("fa-solid","fa-star")}const e=u.querySelectorAll(".important-task");for(let t=0;t<e.length;t++)e[t].setAttribute("data-card",l[t]),e[t].querySelectorAll(".task-status, .round, .fa-star").forEach((e=>{e.setAttribute("data-card",l[t])}))}()}function $(){u.innerHTML="",D(),H(),function(){for(let t=0;t<e.length;t++){u.appendChild(document.createElement("div")).classList.add("task","item","not-important");const a=u.querySelectorAll(".not-important");a[t].appendChild(document.createElement("div")).classList.add("task-status"),a[t].appendChild(document.createElement("div")).classList.add("task-text"),a[t].appendChild(document.createElement("div")).classList.add("task-importance"),a[t].querySelector(".task-status").appendChild(document.createElement("div")).classList.add("round","not-important-round");const n=a[t].querySelector(".task-text");n.appendChild(document.createElement("div")).classList.add("task-heading"),n.appendChild(document.createElement("div")).classList.add("task-category"),a[t].querySelector(".task-heading").appendChild(document.createElement("h2")).textContent=e[t].title,n.querySelector(".task-category").appendChild(document.createElement("p")).textContent="Tasks",a[t].querySelector(".task-importance").appendChild(document.createElement("i")).classList.add("fa-solid","fa-star"),T()}}(),F(),C.textContent="All Entries"}function J(){u.innerHTML="",D(),F(),C.textContent="Important Tasks"}function _(){u.innerHTML="",H(),F(),C.textContent="All Notes"}E.addEventListener("click",(()=>{J()})),g.addEventListener("click",(()=>{$()})),f.addEventListener("click",(()=>{u.innerHTML="",function(){for(let e=0;e<n.length;e++){u.appendChild(document.createElement("div")).classList.add("task","item","completed-task");const t=u.querySelectorAll(".completed-task");t[e].appendChild(document.createElement("div")).classList.add("task-status"),t[e].appendChild(document.createElement("div")).classList.add("task-text"),t[e].appendChild(document.createElement("div")).classList.add("task-importance"),t[e].querySelector(".task-status").appendChild(document.createElement("div")).classList.add("round"),t[e].querySelector(".round").style.backgroundColor="green";const a=t[e].querySelector(".task-text");a.appendChild(document.createElement("div")).classList.add("task-heading"),a.appendChild(document.createElement("div")).classList.add("task-category"),t[e].querySelector(".task-heading").appendChild(document.createElement("h2")).textContent=n[e].title,a.querySelector(".task-category").appendChild(document.createElement("p")).textContent="Tasks",t[e].querySelector(".task-importance").appendChild(document.createElement("i")).classList.add("fa-solid","fa-star"),I()}}(),F(),C.textContent="Completed Tasks"})),x.addEventListener("click",(()=>{_()})),p.addEventListener("click",(a=>{a.preventDefault(),$(),document.querySelectorAll(".todo-setter-form input").forEach((e=>{e.checkValidity(),e.reportValidity()}));const n=document.querySelector(".todo-setter-title-input input"),o=document.querySelector(".todo-setter-details-input textarea"),c=document.querySelector(".todo-setter-projects-input select"),s=document.querySelector(".todo-setter-date-input input"),r=document.querySelector(".container input");var d,l,i,m,p;document.getElementById("projects_input"),""===n.value||(!0===r.checked?(d=n.value,l=o.value,i=c.value,m=s.value,p=r.value,t.push(new b(d,l,i,m,p)),function(e){for(let a=e-1;a<t.length;a++){u.appendChild(document.createElement("div")).classList.add("task","item","important-task");const e=u.querySelectorAll(".important-task");e[a].appendChild(document.createElement("div")).classList.add("task-status"),e[a].appendChild(document.createElement("div")).classList.add("task-text"),e[a].appendChild(document.createElement("div")).classList.add("task-importance"),e[a].querySelector(".task-status").appendChild(document.createElement("div")).classList.add("round","important-round");const n=e[a].querySelector(".task-text");n.appendChild(document.createElement("div")).classList.add("task-heading"),n.appendChild(document.createElement("div")).classList.add("task-category"),e[a].querySelector(".task-heading").appendChild(document.createElement("h2")).textContent=t[a].title,n.querySelector(".task-category").appendChild(document.createElement("p")).textContent="Tasks",e[a].querySelector(".task-importance").appendChild(document.createElement("i")).classList.add("fa-solid","fa-star"),F(),M()}}(t.length)):!1===r.checked&&function(t,a,n,o,c){e.push(new b(t,a,n,o,c)),function(t){for(let a=t-1;a<e.length;a++){u.appendChild(document.createElement("div")).classList.add("task","item","not-important");const t=u.querySelectorAll(".not-important");t[a].appendChild(document.createElement("div")).classList.add("task-status"),t[a].appendChild(document.createElement("div")).classList.add("task-text"),t[a].appendChild(document.createElement("div")).classList.add("task-importance"),t[a].querySelector(".task-status").appendChild(document.createElement("div")).classList.add("round","not-important-round");const n=t[a].querySelector(".task-text");n.appendChild(document.createElement("div")).classList.add("task-heading"),n.appendChild(document.createElement("div")).classList.add("task-category"),t[a].querySelector(".task-heading").appendChild(document.createElement("h2")).textContent=e[a].title,n.querySelector(".task-category").appendChild(document.createElement("p")).textContent="Tasks",t[a].querySelector(".task-importance").appendChild(document.createElement("i")).classList.add("fa-solid","fa-star"),F(),T()}}(e.length)}(n.value,o.value,c.value,s.value,r.value),document.querySelector(".creator-menu").classList.remove("active-menu"),document.querySelector(".todo-setter").classList.remove("active-todo-setter"),n.value="",o.value="",s.value="",r.checked=!1)})),v.addEventListener("click",(e=>{e.preventDefault(),$(),document.querySelectorAll(".note-setter-form input").forEach((e=>{e.checkValidity(),e.reportValidity()}));const t=document.querySelector(".note-setter-title-input input"),n=document.querySelector(".note-setter-details-input textarea");var o,c;""===t.value||(o=t.value,c=n.value,a.push(new A(o,c)),function(e){for(let t=e-1;t<a.length;t++){u.appendChild(document.createElement("div")).classList.add("note","item");const e=u.querySelectorAll(".note");e[t].appendChild(document.createElement("div")).classList.add("note-status"),e[t].appendChild(document.createElement("div")).classList.add("note-text"),e[t].appendChild(document.createElement("div")).classList.add("note-importance"),e[t].querySelector(".note-status").appendChild(document.createElement("div")).classList.add("note-icon"),e[t].querySelector(".note-icon").appendChild(document.createElement("i")).classList.add("fa-solid","fa-note-sticky");const n=e[t].querySelector(".note-text");n.appendChild(document.createElement("div")).classList.add("note-heading"),n.appendChild(document.createElement("div")).classList.add("note-category"),e[t].querySelector(".note-heading").appendChild(document.createElement("h2")).textContent=a[t].title,n.querySelector(".note-category").appendChild(document.createElement("p")).textContent="Notes",F(),w()}}(a.length),document.querySelector(".creator-menu").classList.remove("active-menu"),document.querySelector(".note-setter").classList.remove("active-note-setter"),t.value="",n.value="")})),y.addEventListener("click",(e=>{e.preventDefault(),$(),document.querySelectorAll(".project-setter-form input").forEach((e=>{e.checkValidity(),e.reportValidity()}));const t=document.querySelector(".project-setter-title-input textarea"),a=document.querySelector(".project-setter-color-input input");var n,r;""===t.value||(n=t.value,r=a.value,o.push(new j(n,r)),function(e){for(let t=e-1;t<o.length;t++){m.appendChild(document.createElement("div")).classList.add("project-list");const e=m.querySelectorAll(".project-list");e[t].appendChild(document.createElement("div")).classList.add("project-color"),e[t].appendChild(document.createElement("div")).classList.add("project-name"),e[t].appendChild(document.createElement("div")).classList.add("project-count"),e[t].querySelector(".project-color").appendChild(document.createElement("div")),e[t].querySelector(".project-color div").style.backgroundColor=o[t].color,e[t].querySelector(".project-name").appendChild(document.createElement("h2")).textContent=o[t].title,e[t].querySelector(".project-count").appendChild(document.createElement("p")).textContent=0,N()}}(o.length),s.push([]),document.querySelector(".creator-menu").classList.remove("active-menu"),document.querySelector(".project-setter").classList.remove("active-project-setter"),t.value="",a.value="#FFFFFF"),document.addEventListener("click",(e=>{const t=e.target;if(e.stopImmediatePropagation(),e.stopPropagation(),t.classList.contains("project-list")){t.getAttribute("data-card");const e=t.querySelector("h2").textContent;C.textContent=e,u.innerHTML="",V(e)}}));const d=document.querySelectorAll(".project-name h2");c=[],d.forEach((e=>{c.push(e.textContent)}));const l=document.createElement("option");l.classList.add("list-item"),c.forEach((e=>{l.text="",l.text=e,q.appendChild(l)})),function(){const e=document.getElementById("projects_input").querySelectorAll(".list-item");for(let t=0;t<e.length;t++)e[t].setAttribute("list-attribute",[t])}()})),document.addEventListener("click",(a=>{let o=a.target;const c=a.target,s=o.classList,r=[],d=Array.from(s);for(;"HTML"!==o.tagName;){const e=o.classList;if(e.length>0)for(let t=0;t<e.length;t++){const a=e[t];r.includes(a)||r.push(a)}o=o.parentNode}if(d.includes("not-important-round")){const t=c.getAttribute("data-card"),a=e[t];n.push(a),e.splice(t,1),"All Entries"===C.textContent?$():"Important Tasks"===C.textContent?J():"All Notes"===C.textContent?_():(u.innerHTML="",V(C.textContent)),F()}else if(d.includes("important-round")){const e=c.getAttribute("data-card"),a=t[e];n.push(a),t.splice(e,1),"All Entries"===C.textContent?$():"Important Tasks"===C.textContent?J():"All Notes"===C.textContent&&_(),F()}else if(!r.includes("fa-star")||r.includes("important-task")||r.includes("completed-task")){if(r.includes("fa-star")&&r.includes("important-task")&&!r.includes("completed-task")){const a=c.getAttribute("data-card"),n=t[a],o=u.querySelectorAll(".important-task"),s=document.querySelector(`.important-task[data-card="${a}"]`);console.log(o),"All Entries"===C.textContent||"Important Tasks"===C.textContent||"All Notes"===C.textContent?(o[a].classList.remove("important-task"),o[a].classList.add("not-important")):(s.classList.remove("important-task"),s.classList.add("not-important")),e.push(n),t.splice(a,1),"All Entries"===C.textContent?$():"Important Tasks"===C.textContent?J():"All Notes"===C.textContent&&_(),F()}}else{const a=c.getAttribute("data-card"),n=e[a],o=u.querySelectorAll(".not-important"),s=document.querySelector(`.not-important[data-card="${a}"]`);console.log(o),"All Entries"===C.textContent||"Important Tasks"===C.textContent||"All Notes"===C.textContent?(o[a].classList.remove("not-important"),o[a].classList.add("important-task")):(s.classList.remove("not-important"),s.classList.add("important-task")),t.push(n),e.splice(a,1),"All Entries"===C.textContent?$():"Important Tasks"===C.textContent?J():"All Notes"===C.textContent&&_(),F()}}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,